{"version":3,"sources":["constants/actionTypes.js","api/api.js","actions/posts.js","components/Posts/SinglePost/styles.js","components/Posts/SinglePost/SinglePost.js","components/Loader/Loading.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","images/img18.jpg","styles.js","App.js","reducers/index.js","reducers/posts.js","index.js"],"names":["CREATE_POST","UPDATE_POST","DELETE_POST","FETCH_ALL","LIKE_POST","apiURL","updatePost","id","updatedPost","axios","patch","deletePost","delete","likePost","createPost","post","dispatch","a","newPost","data","type","payload","console","log","message","api","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","fontSize","overlay1","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","SinglePost","setCurrentId","useDispatch","classes","useStyles","Card","className","CardMedia","image","selectedFile","Typography","variant","creator","moment","createdAt","fromNow","Button","style","size","onClick","_id","component","tags","map","tag","CardContent","gutterBottom","CardActions","textAlign","likeCount","marginLeft","Loading","marginTop","width","timeout","React","Component","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","Posts","posts","useSelector","state","length","Grid","container","item","xs","sm","md","root","paper","form","flexWrap","fileInput","buttonSubmit","marginBottom","Form","currentId","useState","postData","setPostData","find","useEffect","clearFormData","handleSubmit","e","preventDefault","Paper","onSubmit","autoComplete","noValidate","TextField","name","label","placeholder","fullWidth","value","onChange","target","multiline","rows","split","multiple","onDone","base64","appBar","heading","backgroundSize","breakpoints","down","App","get","Container","maxWidth","AppBar","align","src","memories","alt","Grow","in","justify","sx","formContainer","reducers","combineReducers","action","filter","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5505cbfa.chunk.js","sourcesContent":["\r\n\r\nexport const CREATE_POST = 'CREATE_POST';\r\nexport const UPDATE_POST = 'UPDATE_POST';\r\nexport const DELETE_POST = 'DELETE_POST';\r\nexport const FETCH_ALL = 'FETCH_ALL';\r\nexport const LIKE_POST = 'LIKE_POST';","\r\nimport axios from \"axios\";\r\n\r\n\r\n// SERVER OR BACKEND URL ENDPOINT\r\n// const apiURL = \"http://localhost:5000/posts\";\r\n\r\nconst apiURL = \"https://record-dating-app.herokuapp.com/posts\";\r\n\r\n\r\nexport const fetchPosts = () => axios.get(apiURL);\r\nexport const createPost = (newPost) => axios.post(apiURL, newPost);\r\nexport const updatePost = (id, updatedPost) => axios.patch(`${apiURL}/${id}`, updatedPost);\r\nexport const deletePost = (id) => axios.delete(`${apiURL}/${id}`);\r\nexport const likePost = (id) => axios.patch(`${apiURL}/${id}/likePost`);\r\n\r\n\r\n// export const fetchPosts = () => {\r\n//     const res = axios.get(apiURL)\r\n    \r\n//     console.log(res)\r\n// }\r\n\r\n\r\n\r\n","\r\n// IMPORT ALL THE CONSTANTS\r\nimport { FETCH_ALL, CREATE_POST, UPDATE_POST, DELETE_POST, LIKE_POST } from \"../constants/actionTypes\";\r\n\r\n\r\n// WE ARE IMPORTING ALL OUR APIs METHOD FROM\r\n// THE API FOLDER BY USING THE * SYMBOL\r\nimport * as api from \"../api/api.js\";\r\n    \r\n\r\n// ACTION CREATORS IN REDUX ARE FUNCTION \r\n// THAT CREATE AN ACTION LIKE FETCHING DATA FROM THE \r\n// SERVER OR DOING OTHER LOGIC\r\n\r\n// WE CREATE AN ACTION CREATORS: TO FETCH OUR DATA FROM \r\n// THE SERVER\r\n\r\n\r\n// GET ALL POST FROM DATABASE / SERVER\r\nconst getPosts = () => async (dispatch) => {\r\n    try {\r\n       const { data } = await api.fetchPosts();\r\n        dispatch({\r\n            type: FETCH_ALL,\r\n            payload: data\r\n        });\r\n\r\n    } catch (err) {\r\n        // console.log(error.message);\r\n        console.log(err);\r\n        return err.message\r\n    }\r\n};\r\n\r\n\r\n// CREATE POST AND SEND TO THE DATABASE / SERVER\r\nconst createPost = (post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createPost(post);\r\n        dispatch({\r\n            type: CREATE_POST,\r\n            payload: data\r\n        });\r\n\r\n    } catch (err) {\r\n        // console.log(error.message);\r\n        console.log(err);\r\n        return err.message\r\n    }\r\n};\r\n\r\n\r\nconst updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePost(id, post);\r\n        dispatch({\r\n            type: UPDATE_POST,\r\n            payload: data\r\n        });\r\n\r\n    } catch (err) {\r\n        // console.log(error.message);\r\n        console.log(err);\r\n        return err.message\r\n    }\r\n};\r\n\r\n\r\nconst deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n        dispatch({\r\n            type: DELETE_POST,\r\n            payload: id\r\n        });\r\n\r\n    } catch (err) {\r\n        // console.log(error.message);\r\n        console.log(err);\r\n        return err.message\r\n    }\r\n};\r\n\r\n\r\nconst likePost = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.likePost(id);\r\n        dispatch({\r\n            type: LIKE_POST,\r\n            payload: data\r\n        });\r\n\r\n    } catch (err) {\r\n        // console.log(error.message);\r\n        console.log(err.message);\r\n        return err.message\r\n    }\r\n}\r\n\r\n\r\n\r\nexport { getPosts, createPost, updatePost, deletePost, likePost };\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nexport default makeStyles({\r\n    media: {\r\n        height: 0,\r\n        paddingTop: \"56.25%\",\r\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n        backgroundBlendMode: \"darken\",\r\n    },\r\n    border: {\r\n        border: \"solid\",\r\n    },\r\n    fullHeightCard: {\r\n        height: \"100%\",\r\n    },\r\n    card: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"space-between\",\r\n        borderRadius: \"15px\",\r\n        height: \"100%\",\r\n        position: \"relative\",\r\n        fontSize: \"14px\",\r\n    },\r\n    overlay1: {\r\n        position: \"absolute\",\r\n        top: \"20px\",\r\n        left: \"20px\",\r\n        color: \"white\",\r\n        fontSize: \"14px\",\r\n    },\r\n    overlay2: {\r\n        position: \"absolute\",\r\n        top: \"20px\",\r\n        right: \"20px\",\r\n        color: \"white\",\r\n        fontSize: \"14px\",\r\n    },\r\n    grid: {\r\n        display: \"flex\",\r\n    },\r\n    details: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        margin: \"20px\",\r\n        fontSize: \"14px\",\r\n    },\r\n    title: {\r\n        padding: \"0 16px\",\r\n        fontSize: \"16px\",\r\n    },\r\n    cardActions: {\r\n        padding: \"0 16px 0px 0px\",\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        fontSize: \"10px\",\r\n    },\r\n    \r\n})","\r\nimport React from \"react\";\r\nimport { \r\n    Card, \r\n    CardActions, \r\n    CardContent, \r\n    CardMedia, \r\n    Button, \r\n    Typography \r\n} from \"@material-ui/core\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport moment from \"moment\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\n// THEN WE IMPORT THE ACTIONS OR METHODS WE WANT TO USE\r\nimport { likePost, deletePost } from \"../../../actions/posts\";\r\nimport useStyles from \"./styles\";\r\n\r\n\r\n\r\nconst SinglePost = ({ post, setCurrentId }) => {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardMedia \r\n                className={classes.media}\r\n                image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'}\r\n                title={post.title}\r\n            />\r\n\r\n            <div className={classes.overlay1}>\r\n               <Typography variant=\"h6\">{post.creator}</Typography>\r\n               <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n            </div>\r\n\r\n            <div className={classes.overlay2}>\r\n                <Button \r\n                    style={{ color: \"white\" }}\r\n                    size=\"small\"\r\n                    onClick={() => setCurrentId(post._id)}>\r\n                        <MoreHorizIcon fontSize=\"default\" />\r\n                </Button>\r\n            </div>\r\n\r\n            <div className={classes.details}>\r\n                <Typography \r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"h2\"\r\n                >\r\n                    { post.tags.map((tag) => `#${tag}`) }\r\n                </Typography>\r\n            </div>\r\n\r\n            <CardContent>\r\n                <Typography\r\n                    className={classes.title}\r\n                    gutterBottom\r\n                    variant=\"h5\"\r\n                    component=\"h2\"\r\n                >\r\n                    { post.title }\r\n                </Typography>\r\n            </CardContent>\r\n\r\n            <CardContent>\r\n                <Typography \r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                >\r\n                    { post.message }\r\n                </Typography>\r\n            </CardContent>\r\n\r\n            <CardActions className={classes.cardActions}>\r\n                <Button\r\n                    size=\"small\"\r\n                    style={{ color: \"red\", fontSize: 9 }}\r\n                    onClick={() => dispatch(likePost(post._id))}>\r\n                \r\n                    <ThumbUpAltIcon style={{ fontSize: 12, textAlign: \"center\", color: \"black\", margin: 0  }} /> \r\n                    Like { post.likeCount }\r\n                </Button>\r\n\r\n                <Button\r\n                    style={{ color: \"black\", fontSize: 9, marginLeft: 0 }}\r\n                    size=\"small\"\r\n                    onClick={() => dispatch(deletePost(post._id))}>\r\n                \r\n                    <DeleteIcon style={{ fontSize: 12, textAlign: \"center\", color: \"black\" }} /> \r\n                        Delete\r\n                </Button>\r\n            </CardActions>\r\n\r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default SinglePost;","\r\nimport React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\n\r\nclass Loading extends React.Component {\r\n   \r\n    render() {\r\n     return(\r\n      <div style={{display: \"flex\", justifyContent: \"center\", textAlign: \"center\", marginTop: \"40px\"}}>\r\n        <Loader\r\n         type=\"ThreeDots\"\r\n         color=\"#000000\"\r\n         height={70}\r\n         width={70}\r\n         timeout={500000}\r\n      />\r\n      </div>\r\n     );\r\n    }\r\n}\r\n\r\n\r\nexport default Loading;\r\n","\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nexport default makeStyles((theme) => ({\r\n    mainContainer: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n    smMargin: {\r\n        margin: theme.spacing(1),\r\n    },\r\n    actionDiv: {\r\n        textAlign: \"center\",\r\n    },\r\n\r\n}));","\r\nimport React from \"react\";\r\nimport SinglePost from \"./SinglePost/SinglePost\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport Loading from \"../Loader/Loading\";\r\nimport useStyles from \"./styles\";\r\n\r\n// AFTER SETTING UP AND DISPATCHING AND FETCHING \r\n// OUR DATA FROM THE USING REDUX, THIS IS TIME TO \r\n// USE IT IN OUR COMPONENTS BY USING THE USE\r\n// SELECTOR HOOKS FROM REACT REDUX\r\nimport { useSelector } from \"react-redux\";\r\n\r\n\r\n\r\nconst Posts = ({ setCurrentId }) => {\r\n\r\n    const classes = useStyles\r\n\r\n    // THEN WE USE IT LIKE THIS\r\n    const posts = useSelector((state) => state.posts);\r\n  \r\n    return (\r\n      !posts.length ? \r\n        <Loading /> \r\n        : \r\n        (\r\n          <Grid \r\n            className={classes.container}\r\n            container\r\n            alignItems=\"stretch\"\r\n            spacing={3}\r\n          >\r\n              {posts.map((post) => (\r\n                <Grid key={post._id} item xs={12} sm={6} md={6}>\r\n                    <SinglePost post={post} setCurrentId={setCurrentId} />\r\n                </Grid>\r\n              ))}\r\n          </Grid>\r\n        )\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Posts;","\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nexport default makeStyles((theme) => ({\r\n    root: {\r\n        '& .MuiTextField-root': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n    },\r\n    form: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"center\",\r\n    },\r\n    fileInput: {\r\n        width: \"97%\",\r\n        margin: \"10px 0\",\r\n    },\r\n    buttonSubmit: {\r\n        marginBottom: 10,\r\n    },\r\n\r\n}));","\r\nimport React, { useState, useEffect } from \"react\";\r\nimport useStyles from \"./styles\";\r\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\r\nimport FileBase from \"react-file-base64\";\r\n\r\n// LASTLY, AFTER DOING EVERYTHING IN / WITH REDUX, \r\n// WE MUST DISPATCH THE ACTIONS OR METHODS IN THE FILE\r\n// THAT WE WANT BEFORE USING THEM.\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createPost, updatePost } from \"../../actions/posts\";\r\n\r\n\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    \r\n\r\n    const [postData, setPostData] = useState({\r\n        creator: \"\",\r\n        title: \"\",\r\n        message: \"\",\r\n        tags: \"\",\r\n        selectedFile: \"\"\r\n    });\r\n\r\n\r\n    const post = useSelector((state) => ( \r\n      currentId ? \r\n        state.posts.find((message) => message._id === currentId)\r\n        :\r\n        null\r\n    ));\r\n\r\n    \r\n    useEffect(() => {\r\n      if (post) {\r\n        setPostData(post);\r\n      }\r\n    }, [post]);\r\n\r\n    const clearFormData = () => {\r\n      setCurrentId(0);\r\n      setPostData({\r\n        title: '',\r\n        message: '',\r\n        creator: '',\r\n        tags: '',\r\n        selectedFile: ''\r\n      });\r\n    };\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (currentId === 0) {\r\n          dispatch(createPost(postData));\r\n          clearFormData();\r\n        } else {\r\n          dispatch(updatePost(currentId, postData));\r\n          clearFormData();\r\n        }\r\n    };\r\n\r\n    \r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <form id=\"post-form\" onSubmit={handleSubmit} autoComplete=\"off\" noValidate \r\n             className={`${classes.root} ${classes.form}`}>\r\n              <Typography style={{ fontSize: 14 }} >{currentId ? `Editing \"${post.title}\"` : 'Creating a Dates'}</Typography>\r\n                <TextField\r\n                  name=\"creator\"  \r\n                  label=\"Creator\"\r\n                  placeholder=\"Creator Field is required\"\r\n                  fullWidth \r\n                  value={postData.creator}\r\n                  onChange={(e) => setPostData({ \r\n                      ...postData, \r\n                      creator: e.target.value \r\n                  })}\r\n                />\r\n                \r\n                <TextField\r\n                  name=\"title\" \r\n                  placeholder=\"Title Field is required\"\r\n                  label=\"Title\"\r\n                  fullWidth \r\n                  value={postData.title}\r\n                  onChange={(e) => setPostData({ \r\n                      ...postData, \r\n                      title: e.target.value \r\n                  })}\r\n                \r\n                />\r\n                \r\n                <TextField\r\n                  name=\"message\" \r\n                  placeholder=\"Message Field is required\"\r\n                  label=\"Message\"\r\n                  multiline\r\n                  rows={4}\r\n                  fullWidth \r\n                  value={postData.message}\r\n                  onChange={(e) => setPostData({ \r\n                      ...postData, \r\n                      message: e.target.value \r\n                  })}\r\n                \r\n                />\r\n                \r\n                <TextField\r\n                  name=\"tags\" \r\n                  label=\"Tags(eg: my birthday)\" \r\n                  placeholder=\"Title Field is required\" \r\n                  fullWidth \r\n                  value={postData.tags}\r\n                  onChange={(e) => setPostData({ \r\n                      ...postData, \r\n                      tags: e.target.value.split(',') \r\n                  })}\r\n                \r\n                />\r\n                \r\n                <div className={classes.fileInput}>\r\n                  <FileBase\r\n                    type=\"file\"\r\n                    multiple={false}\r\n                    onDone={({ base64 }) => setPostData({ \r\n                        ...postData, \r\n                        selectedFile: base64\r\n                    })}\r\n                  />\r\n                </div>\r\n                \r\n                <Button \r\n                    className={classes.buttonSubmit} \r\n                    variant=\"contained\"\r\n                    style={{ backgroundColor: \"brown\", color: \"black\" }}\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    fullWidth>\r\n                    Submit\r\n                </Button>\r\n                <Button \r\n                    className={classes.buttonSubmit} \r\n                    variant=\"contained\"\r\n                    style={{ backgroundColor: \"gray\", color: \"black\" }}\r\n                    size=\"small\"\r\n                    onClick={clearFormData}\r\n                    fullWidth>\r\n                    Clear\r\n                </Button>\r\n            </form>\r\n        </Paper>\r\n    );\r\n}\r\n\r\n\r\nexport default Form;","export default __webpack_public_path__ + \"static/media/img18.4558cfd6.jpg\";","\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nexport default makeStyles((theme) => ({\r\n    appBar: {\r\n        borderRadius: 15,\r\n        margin: \"30px 0\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    heading: {\r\n        color: (\"#807F68\"),\r\n        fontSize: \"2rem\",\r\n    },\r\n    image: {\r\n        marginLeft: \"15px\",\r\n        backgroundSize: \"cover\",\r\n        width: \"110px\",\r\n    },\r\n\r\n    // THIS IS HOW TO USE MEDIA QUERIES IN METERIAL-UI\r\n    [theme.breakpoints.down('sm')]: {\r\n        mainContainer: {\r\n            flexDirection: \"column-reverse\"\r\n        }\r\n    }\r\n\r\n}));\r\n","\nimport React, { useEffect, useState } from \"react\";\nimport { Container, AppBar, Typography, Grow, Grid } from \"@material-ui/core\";\nimport Posts from \"./components/Posts/Posts\";\nimport Form from \"./components/Form/Form\";\nimport memories from \"./images/img18.jpg\";\nimport useStyles from \"./styles\";\n\n\n// USE REDUX HOOKS TO DISPATCH AN ACTION TO THE ENTIRE PROJECT\nimport { useDispatch } from \"react-redux\";\n\n// IMPORT OUR ACTIONS FILES\nimport { getPosts } from \"./actions/posts\";\n  \n\n\nfunction App() {\n  const [currentId, setCurrentId] = useState(0);\n  const classes = useStyles()\n  // INITALIZE THE USE DISPATCH HOOKS BEFORE USING IT.\n  const dispatch = useDispatch()\n\n  // THIS IS HOW YOU DISPATCH AN ACTION IN REDUX\n  // YOU MUST USE THE USE EFFECT HOOKS TO DISPATCH AN ACTION\n  useEffect(() => {\n      dispatch(getPosts())\n  }, [currentId, dispatch]);\n\n\n  return (\n    <Container className=\"custom-container\" maxWidth=\"lg\">\n\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n          <Typography id=\"mediaQTitle\" className={classes.heading} variant=\"h2\" align=\"center\">Record Dates</Typography>\n          <img className={classes.image} src={memories} alt=\"memories\" height=\"60\" />\n      </AppBar>\n    \n\n      <Grow in>\n          <Container>\n            <Grid container className={classes.mainContainer} justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\n              \n              <Grid item sx={12} sm={7}>\n                 <Posts setCurrentId={setCurrentId} />\n              </Grid>\n\n              <Grid className={classes.formContainer} item xs={12} sm={5}>\n                 <Form currentId={currentId} setCurrentId={setCurrentId} />\n              </Grid>\n              \n            </Grid>\n          </Container>\n      </Grow>\n\n\n    </Container>\n  );\n}\n\n\nexport default App;\n","\r\n// THIS IS THE COMBINE REDUCERS FILE\r\nimport { combineReducers } from \"redux\";\r\nimport posts from \"./posts\";\r\n\r\n\r\nexport const reducers = combineReducers({\r\n     posts: posts,\r\n});\r\n","\r\n// IMPORT ALL THE CONSTANTS\r\nimport { FETCH_ALL, CREATE_POST, UPDATE_POST, DELETE_POST, LIKE_POST } from \"../constants/actionTypes\";\r\n\r\n\r\n\r\n// THE REDUCER FUNCTION / METHOD\r\nexport default (posts = [], action) => {\r\n    switch (action.type) {\r\n        case FETCH_ALL:\r\n            return action.payload;\r\n\r\n        case CREATE_POST:\r\n            return [...posts, action.payload];\r\n\r\n        case UPDATE_POST:\r\n            return posts.map((post) => (\r\n                post._id === action.payload._id ?\r\n                action.payload \r\n                : \r\n                post\r\n            ));\r\n\r\n        case DELETE_POST:\r\n            return posts.filter((post) => post._id !== action.payload);\r\n        \r\n        case LIKE_POST:\r\n            return posts.map((post) => (\r\n                post._id === action.payload._id ? \r\n                action.payload \r\n                : \r\n                post\r\n            ));\r\n            \r\n        default:\r\n            return posts;\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\n\n// import redux modules\nimport { Provider } from \"react-redux\";\nimport { \n        createStore, \n        applyMiddleware, \n        compose \n  } from \"redux\";\n\nimport thunk from \"redux-thunk\";\n\n// import the reducers / reducers folder\nimport { reducers } from \"./reducers\";\n\n// create redux store\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\n              \n\n\nReactDOM.render(\n     <Provider store={store}>\n          <App />\n     </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}